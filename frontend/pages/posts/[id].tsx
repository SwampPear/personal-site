import Head from 'next/head'
import { useEffect } from 'react'

import Base from '../../src/features/base/Base'
import Blog from '../../src/features/blog/Blog'

import { useAppSelector } from '../../src/app/hooks'
import { selectDarkModeInit, selectDarkModeState } from '../../src/features/darkmode/darkModeSlice' 

import { gql } from "@apollo/client"
import { client } from '../_app'


const allPosts = () => {
  return gql`
    query {
      allPosts {
        id
        type
        title
        readingTime
        content
      }
    }
  `
}

const postByID = (id: number) => {
  return gql`
    query {
      postById(id: ${id}) {
        id
        type
        title
        readingTime
        content
      }
    }
  `
}

export async function getAllPosts() {
  return client
    .query({
      query: allPosts(),
    })
    .then((result) => result.data.allPosts)
    .catch((error) => console.log(JSON.stringify(error, null, 2)))
    
}

export async function getPostByID(id: number) {
  return client
    .query({
      query: postByID(id),
    })
    .then((result) => {
      return result.data.postById
    })
    .catch((error) => console.log(JSON.stringify(error, null, 2)))
}

export async function getStaticPaths() {
  const posts = await getAllPosts()

  const paths = posts.map((post: any) => ({
    params: { id: post.id },
  }))

  return { paths, fallback: false }
}


export async function getStaticProps({ params }: any) {
  const post = await getPostByID(params.id)

  return { props: { post } }
}


const PostsPage = ({post}: any) => {
  // darkmode
  const darkmode = useAppSelector( selectDarkModeState )
  const darkmodeInit = useAppSelector( selectDarkModeInit )

  useEffect( () => { 
    if (darkmodeInit) {
      if (darkmode) {
        document.querySelector( 'body' )?.classList.remove( 'bodyFromDark' ) 
        document.querySelector( 'body' )?.classList.add( 'bodyToDark' ) 
      } else {
        document.querySelector( 'body' )?.classList.remove( 'bodyToDark' ) 
        document.querySelector( 'body' )?.classList.add( 'bodyFromDark' ) 
      }
    }
  }, [darkmode, darkmodeInit])

  return (
    <>
      <Head>
        <title>Michael Vaden - {post.title}</title>
        <meta name="description" content="Generated by create nex" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Base/>
        <Blog
          id={post.id}
          type={post.type}
          title={post.title}
          readingTime={post.readingTime}
          content={post.content}
        />
      </main>
    </>
  )
}

export default PostsPage