{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/michaelvaden/Desktop/Projects/personalsite/frontend/src/features/nav/Nav.tsx\";\nimport React from 'react';\nimport styles from './Nav.module.css';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice';\nimport { switchPage, NavOptions } from './navSlice';\nvar Nav = function Nav() {\n  var dispatch = useAppDispatch();\n  var darkmode = useAppSelector(selectDarkModeState);\n  var darkmodeInit = useAppSelector(selectDarkModeInit);\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: function onClick() {\n      return dispatch(switchPage(NavOptions.work));\n    },\n    className: \"\".concat(styles.scrollButton, \" \").concat(darkmodeInit ? darkmode ? styles.scrollButtonToDark : styles.scrollButtonFromDark : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Work\"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: function onClick() {\n      return dispatch(switchPage(NavOptions.posts));\n    },\n    className: \"\".concat(styles.scrollButton, \" \").concat(darkmodeInit ? darkmode ? styles.scrollButtonToDark : styles.scrollButtonFromDark : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: function onClick() {\n      return dispatch(switchPage(NavOptions.contact));\n    },\n    className: \"\".concat(styles.scrollButton, \" \").concat(darkmodeInit ? darkmode ? styles.scrollButtonToDark : styles.scrollButtonFromDark : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Contact\")));\n};\nexport default Nav;","map":{"version":3,"names":["React","styles","useAppSelector","useAppDispatch","selectDarkModeState","selectDarkModeInit","switchPage","NavOptions","Nav","dispatch","darkmode","darkmodeInit","content","work","scrollButton","scrollButtonToDark","scrollButtonFromDark","posts","contact"],"sources":["/Users/michaelvaden/Desktop/Projects/personalsite/frontend/src/features/nav/Nav.tsx"],"sourcesContent":["import React from 'react';\nimport styles from './Nav.module.css'\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks'\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice'\n\nimport { switchPage, NavOptions } from './navSlice';\n\nconst Nav = () => {\n  const dispatch = useAppDispatch()\n  const darkmode = useAppSelector(selectDarkModeState)\n  const darkmodeInit = useAppSelector(selectDarkModeInit)\n\n  return (\n    <nav>\n      <div className={styles.content}>\n        <span \n          onClick={() => dispatch(switchPage(NavOptions.work))} \n          className={`${styles.scrollButton} ${darkmodeInit ? (darkmode ? styles.scrollButtonToDark : styles.scrollButtonFromDark) : ''}`}\n        >\n          Work\n        </span>\n        <span \n          onClick={() => dispatch(switchPage(NavOptions.posts))} \n          className={`${styles.scrollButton} ${darkmodeInit ? (darkmode ? styles.scrollButtonToDark : styles.scrollButtonFromDark) : ''}`}\n        >\n          Posts\n        </span>\n        <span \n          onClick={() => dispatch(switchPage(NavOptions.contact))} \n          className={`${styles.scrollButton} ${darkmodeInit ? (darkmode ? styles.scrollButtonToDark : styles.scrollButtonFromDark) : ''}`}\n        >\n          Contact\n        </span>\n      </div>\n    </nav>\n  )\n}\n\nexport default Nav"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAErC,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAChE,SAASC,mBAAmB,EAAEC,kBAAkB,QAAQ,2BAA2B;AAEnF,SAASC,UAAU,EAAEC,UAAU,QAAQ,YAAY;AAEnD,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,IAAMC,QAAQ,GAAGN,cAAc,EAAE;EACjC,IAAMO,QAAQ,GAAGR,cAAc,CAACE,mBAAmB,CAAC;EACpD,IAAMO,YAAY,GAAGT,cAAc,CAACG,kBAAkB,CAAC;EAEvD,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAEJ,MAAM,CAACW,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B;IACE,OAAO,EAAE;MAAA,OAAMH,QAAQ,CAACH,UAAU,CAACC,UAAU,CAACM,IAAI,CAAC,CAAC;IAAA,CAAC;IACrD,SAAS,YAAKZ,MAAM,CAACa,YAAY,cAAIH,YAAY,GAAID,QAAQ,GAAGT,MAAM,CAACc,kBAAkB,GAAGd,MAAM,CAACe,oBAAoB,GAAI,EAAE,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjI,MAED,CAAO,eACP;IACE,OAAO,EAAE;MAAA,OAAMP,QAAQ,CAACH,UAAU,CAACC,UAAU,CAACU,KAAK,CAAC,CAAC;IAAA,CAAC;IACtD,SAAS,YAAKhB,MAAM,CAACa,YAAY,cAAIH,YAAY,GAAID,QAAQ,GAAGT,MAAM,CAACc,kBAAkB,GAAGd,MAAM,CAACe,oBAAoB,GAAI,EAAE,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjI,OAED,CAAO,eACP;IACE,OAAO,EAAE;MAAA,OAAMP,QAAQ,CAACH,UAAU,CAACC,UAAU,CAACW,OAAO,CAAC,CAAC;IAAA,CAAC;IACxD,SAAS,YAAKjB,MAAM,CAACa,YAAY,cAAIH,YAAY,GAAID,QAAQ,GAAGT,MAAM,CAACc,kBAAkB,GAAGd,MAAM,CAACe,oBAAoB,GAAI,EAAE,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjI,SAED,CAAO,CACH,CACF;AAEV,CAAC;AAED,eAAeR,GAAG"},"metadata":{},"sourceType":"module"}