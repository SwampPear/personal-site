{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/michaelvaden/Desktop/Projects/personalsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/Users/michaelvaden/Desktop/Projects/personalsite/frontend/src/features/posts/Posts.tsx\";\nimport React from 'react';\nimport styles from './Posts.module.css';\nimport img from '../../image.jpeg';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice';\nimport { useQuery, gql } from \"@apollo/client\";\nvar QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query AllPosts {\\n    allPosts {\\n      postId\\n      title\\n      readingTime\\n      content\\n    }\\n  }\\n\"])));\nvar Posts = function Posts() {\n  var dispatch = useAppDispatch();\n  var darkmode = useAppSelector(selectDarkModeState);\n  var darkmodeInit = useAppSelector(selectDarkModeInit);\n  var _useQuery = useQuery(QUERY, {\n      pollInterval: 500\n    }),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error; //if (error) return <p style={{marginTop: '35rem'}}>Error</p>;\n  //if (loading) return <p style={{marginTop: '5rem'}}>Loading...</p>;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, data.allPosts.map(function (post) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.image,\n      src: img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, post.title));\n  }));\n};\nexport default Posts;","map":{"version":3,"names":["React","styles","img","useAppSelector","useAppDispatch","selectDarkModeState","selectDarkModeInit","useQuery","gql","QUERY","Posts","dispatch","darkmode","darkmodeInit","pollInterval","data","loading","error","container","allPosts","map","post","imageContainer","image","text","title"],"sources":["/Users/michaelvaden/Desktop/Projects/personalsite/frontend/src/features/posts/Posts.tsx"],"sourcesContent":["import React from 'react';\nimport styles from './Posts.module.css'\nimport img from '../../image.jpeg'\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks'\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice'\n\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst QUERY = gql`\n  query AllPosts {\n    allPosts {\n      postId\n      title\n      readingTime\n      content\n    }\n  }\n`\n\n\nconst Posts = () => {\n  const dispatch = useAppDispatch()\n  const darkmode = useAppSelector(selectDarkModeState)\n  const darkmodeInit = useAppSelector(selectDarkModeInit)\n\n  const { data, loading, error } = useQuery( QUERY, { pollInterval: 500 } )\n\n  //if (error) return <p style={{marginTop: '35rem'}}>Error</p>;\n  //if (loading) return <p style={{marginTop: '5rem'}}>Loading...</p>;\n\n  return (\n    <div className={styles.container}>\n      {\n        data.allPosts.map((post: any) => {\n          return (\n            <div className={styles.post}>\n              <div className={styles.imageContainer}>\n                <img className={styles.image} src={img}/>\n              </div>\n              <span className={styles.text}>{post.title}</span>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default Posts"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,GAAG,MAAM,kBAAkB;AAElC,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAChE,SAASC,mBAAmB,EAAEC,kBAAkB,QAAQ,2BAA2B;AAEnF,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAE9C,IAAMC,KAAK,GAAGD,GAAG,oLAShB;AAGD,IAAME,KAAK,GAAG,SAARA,KAAK,GAAS;EAClB,IAAMC,QAAQ,GAAGP,cAAc,EAAE;EACjC,IAAMQ,QAAQ,GAAGT,cAAc,CAACE,mBAAmB,CAAC;EACpD,IAAMQ,YAAY,GAAGV,cAAc,CAACG,kBAAkB,CAAC;EAAA,gBAEtBC,QAAQ,CAAEE,KAAK,EAAE;MAAEK,YAAY,EAAE;IAAI,CAAC,CAAE;IAAjEC,IAAI,aAAJA,IAAI;IAAEC,OAAO,aAAPA,OAAO;IAAEC,KAAK,aAALA,KAAK,EAE5B;EACA;EAEA,oBACE;IAAK,SAAS,EAAEhB,MAAM,CAACiB,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAE7BH,IAAI,CAACI,QAAQ,CAACC,GAAG,CAAC,UAACC,IAAS,EAAK;IAC/B,oBACE;MAAK,SAAS,EAAEpB,MAAM,CAACoB,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC1B;MAAK,SAAS,EAAEpB,MAAM,CAACqB,cAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACpC;MAAK,SAAS,EAAErB,MAAM,CAACsB,KAAM;MAAC,GAAG,EAAErB,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,CACrC,eACN;MAAM,SAAS,EAAED,MAAM,CAACuB,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEH,IAAI,CAACI,KAAK,CAAQ,CAC7C;EAEV,CAAC,CAAC,CAEA;AAEV,CAAC;AAED,eAAef,KAAK"},"metadata":{},"sourceType":"module"}