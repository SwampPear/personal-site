{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/michaelvaden/Desktop/Projects/personalsite/personalsite/src/features/textheader/TextHeader.tsx\";\nimport React from 'react';\nimport styles from './TextHeader.module.css';\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice';\nimport { useAppSelector } from '../../app/hooks';\nvar TextHeader = function TextHeader(props) {\n  var darkmode = useAppSelector(selectDarkModeState);\n  var darkmodeInit = useAppSelector(selectDarkModeInit);\n  if (props.large) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"\".concat(styles.large, \" \").concat(darkmodeInit ? darkmode ? styles.textToDark : styles.textFromDark : ''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, props.children);\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"\".concat(styles.small, \" \").concat(darkmodeInit ? darkmode ? styles.textToDark : styles.textFromDark : ''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, props.children);\n  }\n};\nexport default TextHeader;","map":{"version":3,"names":["React","styles","selectDarkModeState","selectDarkModeInit","useAppSelector","TextHeader","props","darkmode","darkmodeInit","large","textToDark","textFromDark","children","small"],"sources":["/Users/michaelvaden/Desktop/Projects/personalsite/personalsite/src/features/textheader/TextHeader.tsx"],"sourcesContent":["import React from 'react';\nimport styles from './TextHeader.module.css'\n\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice'\nimport { useAppSelector } from '../../app/hooks'\n\n\ntype TextHeaderProps = {\n  large?: boolean;\n  children: string\n}\n\nconst TextHeader = (props: TextHeaderProps) => {\n  const darkmode = useAppSelector(selectDarkModeState)\n  const darkmodeInit = useAppSelector(selectDarkModeInit)\n\n  if (props.large) {\n    return (\n      <h1 className={`${styles.large} ${darkmodeInit ? (darkmode ? styles.textToDark : styles.textFromDark) : ''}`}>\n        {props.children}\n      </h1>\n    )\n  } else {\n    return (\n      <h1 className={`${styles.small} ${darkmodeInit ? (darkmode ? styles.textToDark : styles.textFromDark) : ''}`}>\n        {props.children}\n      </h1>\n    )\n  }\n}\n\nexport default TextHeader"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB;AAE5C,SAASC,mBAAmB,EAAEC,kBAAkB,QAAQ,2BAA2B;AACnF,SAASC,cAAc,QAAQ,iBAAiB;AAQhD,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,KAAsB,EAAK;EAC7C,IAAMC,QAAQ,GAAGH,cAAc,CAACF,mBAAmB,CAAC;EACpD,IAAMM,YAAY,GAAGJ,cAAc,CAACD,kBAAkB,CAAC;EAEvD,IAAIG,KAAK,CAACG,KAAK,EAAE;IACf,oBACE;MAAI,SAAS,YAAKR,MAAM,CAACQ,KAAK,cAAID,YAAY,GAAID,QAAQ,GAAGN,MAAM,CAACS,UAAU,GAAGT,MAAM,CAACU,YAAY,GAAI,EAAE,CAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC1GL,KAAK,CAACM,QAAQ,CACZ;EAET,CAAC,MAAM;IACL,oBACE;MAAI,SAAS,YAAKX,MAAM,CAACY,KAAK,cAAIL,YAAY,GAAID,QAAQ,GAAGN,MAAM,CAACS,UAAU,GAAGT,MAAM,CAACU,YAAY,GAAI,EAAE,CAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC1GL,KAAK,CAACM,QAAQ,CACZ;EAET;AACF,CAAC;AAED,eAAeP,UAAU"},"metadata":{},"sourceType":"module"}