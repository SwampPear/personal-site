{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/michaelvaden/Desktop/Projects/personalsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/Users/michaelvaden/Desktop/Projects/personalsite/frontend/src/features/posts/Posts.tsx\";\nimport React from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice';\nimport { useQuery, gql } from \"@apollo/client\";\nvar QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query AllPosts {\\n    allPosts {\\n        postId\\n      title\\n      readingTime\\n      content\\n    }\\n  }\\n\"])));\nvar Posts = function Posts() {\n  var dispatch = useAppDispatch();\n  var darkmode = useAppSelector(selectDarkModeState);\n  var darkmodeInit = useAppSelector(selectDarkModeInit);\n  var _useQuery = useQuery(QUERY, {\n      pollInterval: 500\n    }),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error;\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  return data.allPosts.map(function (post) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: post.postId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, \"Post - \", post.postId, \": \", post.title, \" \", post.readingTime));\n  });\n};\nexport default Posts;","map":{"version":3,"names":["React","useAppSelector","useAppDispatch","selectDarkModeState","selectDarkModeInit","useQuery","gql","QUERY","Posts","dispatch","darkmode","darkmodeInit","pollInterval","data","loading","error","allPosts","map","post","postId","title","readingTime"],"sources":["/Users/michaelvaden/Desktop/Projects/personalsite/frontend/src/features/posts/Posts.tsx"],"sourcesContent":["import React from 'react';\nimport styles from './Posts.module.css'\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks'\nimport { selectDarkModeState, selectDarkModeInit } from '../darkmode/darkModeSlice'\n\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst QUERY = gql`\n  query AllPosts {\n    allPosts {\n        postId\n      title\n      readingTime\n      content\n    }\n  }\n`\n\nconst Posts = () => {\n  const dispatch = useAppDispatch()\n  const darkmode = useAppSelector(selectDarkModeState)\n  const darkmodeInit = useAppSelector(selectDarkModeInit)\n\n  const { data, loading, error } = useQuery( QUERY, { pollInterval: 500 } )\n\n  if (error) return <p>Error</p>;\n\n  if (loading) return <p>Loading...</p>;\n   \n  return data.allPosts.map(( post: any) => (\n    <div key={post.postId}>\n      <p>\n        Post - {post.postId}: {post.title} {post.readingTime}\n      </p>\n    </div>\n  ))\n}\n\nexport default Posts"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAChE,SAASC,mBAAmB,EAAEC,kBAAkB,QAAQ,2BAA2B;AAEnF,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAE9C,IAAMC,KAAK,GAAGD,GAAG,sLAShB;AAED,IAAME,KAAK,GAAG,SAARA,KAAK,GAAS;EAClB,IAAMC,QAAQ,GAAGP,cAAc,EAAE;EACjC,IAAMQ,QAAQ,GAAGT,cAAc,CAACE,mBAAmB,CAAC;EACpD,IAAMQ,YAAY,GAAGV,cAAc,CAACG,kBAAkB,CAAC;EAAA,gBAEtBC,QAAQ,CAAEE,KAAK,EAAE;MAAEK,YAAY,EAAE;IAAI,CAAC,CAAE;IAAjEC,IAAI,aAAJA,IAAI;IAAEC,OAAO,aAAPA,OAAO;IAAEC,KAAK,aAALA,KAAK;EAE5B,IAAIA,KAAK,EAAE,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,OAAK,CAAI;EAE9B,IAAID,OAAO,EAAE,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,YAAU,CAAI;EAErC,OAAOD,IAAI,CAACG,QAAQ,CAACC,GAAG,CAAC,UAAEC,IAAS;IAAA,oBAClC;MAAK,GAAG,EAAEA,IAAI,CAACC,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACpB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAG,SACM,EAACD,IAAI,CAACC,MAAM,EAAC,IAAE,EAACD,IAAI,CAACE,KAAK,EAAC,GAAC,EAACF,IAAI,CAACG,WAAW,CAClD,CACA;EAAA,CACP,CAAC;AACJ,CAAC;AAED,eAAeb,KAAK"},"metadata":{},"sourceType":"module"}